name: 'Terraform Destroy'

on: [workflow_dispatch]

jobs:
  deploy-to-azure:
    name: 'Destroy to Azure'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - run: echo Working on ${{github.ref}} branch

      - name: Checkout GitHub Actions
        uses: actions/checkout@v3

# Terraform Init, Validate, Plan, and Destroy for Dev Environment
      - name: Terraform Dev Init
        id: tf_init_dev
        run: |
          terraform init \
            -reconfigure \
            -backend-config="storage_account_name=${{ secrets.DEV_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.DEV_STORAGE_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="access_key=${{ secrets.DEV_STORAGE_ACCESS_KEY }}"
        if: github.ref == 'refs/heads/dev'
        working-directory: '/infrastructure'



      - name: Terraform Dev Validate
        id: tf_validate_dev
        run: |
          terraform validate -no-color
        if: github.ref == 'refs/heads/dev'
        working-directory: '/infrastructure'


      - name: Terraform Dev Plan
        id: tf_plan_dev
        run: |
          export TF_VAR_client_id=${{ secrets.DEV_ARM_CLIENT_ID }}
          export TF_VAR_client_secret=${{ secrets.DEV_ARM_CLIENT_SECRET }}
          export TF_VAR_tenant_id=${{ secrets.DEV_ARM_TENANT_ID }}
          export TF_VAR_subscription_id=${{ secrets.DEV_ARM_SUBSCRIPTION_ID }}
          export TF_VAR_admin_login=${{ secrets.DEV_PSQL_ADMINISTRATOR_LOGIN_PASSWORD }}
          export TF_VAR_administrator_login_password=${{ secrets.DEV_PSQL_ADMIN_LOGIN }}
          terraform plan --var-file=terraform-dev.tfvars -no-color
        if: github.ref == 'refs/heads/dev'
        working-directory: '/infrastructure'



      - name: Terraform Dev Destroy
        run: |
          export TF_VAR_client_id=${{ secrets.DEV_ARM_CLIENT_ID }}
          export TF_VAR_client_secret=${{ secrets.DEV_ARM_CLIENT_SECRET }}
          export TF_VAR_tenant_id=${{ secrets.DEV_ARM_TENANT_ID }}
          export TF_VAR_subscription_id=${{ secrets.DEV_ARM_SUBSCRIPTION_ID }}
          export TF_VAR_admin_login=${{ secrets.DEV_PSQL_ADMINISTRATOR_LOGIN_PASSWORD }}
          export TF_VAR_administrator_login_password=${{ secrets.DEV_PSQL_ADMIN_LOGIN }}
          terraform apply -destroy -auto-approve --var-file=terraform-dev.tfvars
        if: github.ref == 'refs/heads/dev'
        working-directory: '/infrastructure'



# Terraform Init, Validate, Plan, and Destroy Main Environment
      - name: Terraform Main Init
        id: tf_init_Main
        run: |
          terraform init \
            -reconfigure \
            -backend-config="storage_account_name=${{ secrets.Main_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.Main_STORAGE_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="access_key=${{ secrets.Main_STORAGE_ACCESS_KEY }}"
        if: github.ref == 'refs/heads/Main'
        working-directory: '/infrastructure'



      - name: Terraform Main Validate
        id: tf_validate_Main
        run: |
          terraform validate -no-color
        if: github.ref == 'refs/heads/Main'
        working-directory: '/infrastructure'



      - name: Terraform Main Plan
        id: tf_plan_Main
        run: |
          export TF_VAR_client_id=${{ secrets.Main_ARM_CLIENT_ID }}
          export TF_VAR_client_secret=${{ secrets.Main_ARM_CLIENT_SECRET }}
          export TF_VAR_tenant_id=${{ secrets.Main_ARM_TENANT_ID }}
          export TF_VAR_subscription_id=${{ secrets.Main_ARM_SUBSCRIPTION_ID }}
          export TF_VAR_admin_login=${{ secrets.Main_PSQL_ADMINISTRATOR_LOGIN_PASSWORD }}
          export TF_VAR_administrator_login_password=${{ secrets.Main_PSQL_ADMIN_LOGIN }}
          terraform plan --var-file=terraform-Main.tfvars -no-color
        if: github.ref == 'refs/heads/Main'
        working-directory: '/infrastructure'



      - name: Terraform Main Destroy
        run: |
          export TF_VAR_client_id=${{ secrets.Main_ARM_CLIENT_ID }}
          export TF_VAR_client_secret=${{ secrets.Main_ARM_CLIENT_SECRET }}
          export TF_VAR_tenant_id=${{ secrets.Main_ARM_TENANT_ID }}
          export TF_VAR_subscription_id=${{ secrets.Main_ARM_SUBSCRIPTION_ID }}
          export TF_VAR_admin_login=${{ secrets.Main_PSQL_ADMINISTRATOR_LOGIN_PASSWORD }}
          export TF_VAR_administrator_login_password=${{ secrets.Main_PSQL_ADMIN_LOGIN }}
          terraform apply -destroy -auto-approve --var-file=terraform-Main.tfvars
        if: github.ref == 'refs/heads/Main'
        working-directory: '/infrastructure'

